- name: Install Neutron controller
  hosts: controller
  become: true
  roles:
    - role: init_database
      vars:
        database: neutron
        user: neutron
    - role: create_identity_user
      vars:
        user: neutron
    - role: create_identity_service
      vars:
        service: neutron
        type: network
        description: "OpenStack Networking"
        endpoint: http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:9696
  tasks:
    - name: Install neutron package
      yum:
        name:
          - openstack-neutron
          - openstack-neutron-linuxbridge
          - openstack-neutron-ml2
          - openstack-neutron-metering-agent
          - ebtables
          - ipset

    - name: Initialize l3 config file
      shell: |
        cat << EOF > /etc/neutron/l3_agent.ini
        [DEFAULT]
        interface_driver = linuxbridge
        EOF

    - name: Initialize DHCP config file
      shell: |
        cat << EOF > /etc/neutron/dhcp_agent.ini
        [DEFAULT]
        interface_driver = linuxbridge
        dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
        enable_isolated_metadata = true
        EOF

    - name: Initialize Metadata config file
      shell: |
        cat << EOF > /etc/neutron/metadata_agent.ini
        [DEFAULT]
        nova_metadata_host = {{ hostvars['controller']['ansible_default_ipv4']['address'] }}
        metadata_proxy_shared_secret = secret
        EOF

- name: Install Neutron compute
  hosts: compute
  become: true
  tasks:
    - name: Install neutron compute package
      yum:
        name:
          - openstack-neutron-linuxbridge
          - ebtables
          - ipset

- name: Initialize the needed neutron config files
  hosts: all
  become: true
  tasks:
    - name: Initialize neutron config file
      shell: |
        cat << EOF > /etc/neutron/neutron.conf
        [database]
        connection = mysql+pymysql://neutron:{{ mysql_project_password }}@{{ hostvars['controller']['ansible_default_ipv4']['address'] }}/neutron

        [DEFAULT]
        core_plugin = ml2
        service_plugins = router, metering
        allow_overlapping_ips = true
        transport_url = rabbit://openstack:{{ rabbitmq_password }}@{{ hostvars['controller']['ansible_default_ipv4']['address'] }}
        auth_strategy = keystone
        notify_nova_on_port_status_changes = true
        notify_nova_on_port_data_changes = true
        api_workers = {{ neutron_api_workers }}

        [keystone_authtoken]
        www_authenticate_uri = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000
        auth_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000
        memcached_servers = {{ hostvars['controller']['ansible_default_ipv4']['address'] }}:11211
        auth_type = password
        project_domain_name = Default
        user_domain_name = Default
        project_name = service
        username = neutron
        password = {{ project_identity_password }}

        [nova]
        auth_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000
        auth_type = password
        project_domain_name = Default
        user_domain_name = Default
        region_name = RegionOne
        project_name = service
        username = nova
        password = {{ project_identity_password }}

        [oslo_concurrency]
        lock_path = /var/lib/neutron/tmp
        EOF

    - name: Update neutron config for Antelopte
      shell: |
        cat << EOF >> /etc/neutron/neutron.conf
                
        [experimental]
        linuxbridge = true
        EOF
      when: openstack_release == "antelope"

    - name: Initialize ml2 config file
      shell: |
        cat << EOF > /etc/neutron/plugins/ml2/ml2_conf.ini
        [ml2]
        type_drivers = flat,vlan,vxlan
        tenant_network_types = vxlan
        mechanism_drivers = linuxbridge,l2population
        extension_drivers = port_security

        [ml2_type_flat]
        flat_networks = provider

        [ml2_type_vxlan]
        vni_ranges = 1:1000

        [securitygroup]
        enable_ipset = true
        EOF

        ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini

- name: Initialize linux-bridge config file
  hosts: all
  become: true
  tasks:
    - name: set key
      set_fact:
        interface_key: "{{ neutron_dataplane_interface_name }}"

    - name: Initialize linux-bridge config file
      shell: |
        cat << EOF > /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        [vxlan]
        enable_vxlan = true
        local_ip = {{ ansible_facts[interface_key]['ipv4']['address'] }}
        l2_population = true

        [securitygroup]
        enable_security_group = true
        firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
        EOF

- name: Initialize linux-bridge config file for external access via network node
  hosts: controller
  become: true
  tasks:
    - name: Initialize linux-bridge config file
      shell: |
        cat << EOF >> /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        [linux_bridge]
        physical_interface_mappings = provider:{{ neutron_provider_interface_name }}
        EOF

- name: Prepare the external linux taps on network node
  hosts: controller
  become: true
  tasks:
    - name: Create and Init the external tap on network node
      shell: |
        ip tuntap add {{ neutron_provider_interface_name }} mode tap
        ip link set {{ neutron_provider_interface_name }} up
        ip add add {{ default_ext_subnet_gateway }}/24 dev {{ neutron_provider_interface_name }}

- name: Complete Neutron controller install
  hosts: controller
  become: true
  tasks:
    - name: Sync database
      shell: su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

    - name: Restart openstack-nova-api
      systemd:
        name: openstack-nova-api
        state: restarted
        enabled: True

    - name: Start neutron-server
      systemd:
        name: neutron-server
        state: started
        enabled: True

    - name: Start neutron-dhcp-agent
      systemd:
        name: neutron-dhcp-agent
        state: started
        enabled: True

    - name: Start neutron-metadata-agent
      systemd:
        name: neutron-metadata-agent
        state: started
        enabled: True

    - name: Start neutron-l3-agent
      systemd:
        name: neutron-l3-agent
        state: started
        enabled: True

    - name: Start neutron-metering-agent
      systemd:
        name: neutron-metering-agent
        state: started
        enabled: True

- name: Complete Neutron compute install
  hosts: all
  become: true
  tasks:
    - name: Start neutron-linuxbridge-agent
      systemd:
        name: neutron-linuxbridge-agent
        state: started
        enabled: True
